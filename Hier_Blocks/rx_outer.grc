<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.12'?>
<flow_graph>
  <timestamp>Mon Apr 30 20:52:48 2018</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value></value>
    </param>
    <param>
      <key>category</key>
      <value>[AMC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>hb</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>rx_outer</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>prompt</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>sizing_mode</key>
      <value>fixed</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
    <param>
      <key>placement</key>
      <value>(0,0)</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(736, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>data_encoded_length</value>
    </param>
    <param>
      <key>value</key>
      <value>int((packet_length) * 1/decoder.rate())</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(488, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>access_code</value>
    </param>
    <param>
      <key>label</key>
      <value>Access Code</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>'0101110111101101' </value>
    </param>
  </block>
  <block>
    <key>blocks_repack_bits_bb</key>
    <param>
      <key>k</key>
      <value>1</value>
    </param>
    <param>
      <key>l</key>
      <value>8</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>endianness</key>
      <value>gr.GR_MSB_FIRST</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(536, 204)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_repack_bits_bb_convolutional</value>
    </param>
    <param>
      <key>len_tag_key</key>
      <value>len_tag_name_rx</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>align_output</key>
      <value>False</value>
    </param>
  </block>
  <block>
    <key>pad_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(864, 204)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>crc_out</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>label</key>
      <value>crc_out</value>
    </param>
    <param>
      <key>num_streams</key>
      <value>1</value>
    </param>
    <param>
      <key>optional</key>
      <value>False</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(256, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>decoder</value>
    </param>
    <param>
      <key>label</key>
      <value>Decoder Object</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>fec.cc_decoder.make(4000, 7, 2, ([79,109]), 0, -1, fec.CC_STREAMING, False)</value>
    </param>
  </block>
  <block>
    <key>digital_crc32_bb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(688, 196)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_crc32_bb_convolutional</value>
    </param>
    <param>
      <key>lengthtagname</key>
      <value>len_tag_name_rx</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>check</key>
      <value>True</value>
    </param>
    <param>
      <key>packed</key>
      <value>True</value>
    </param>
  </block>
  <block>
    <key>fec_extended_tagged_decoder</key>
    <param>
      <key>ann</key>
      <value>None</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>decoder_list</key>
      <value>decoder</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(328, 188)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fec_extended_tagged_decoder_convolutional</value>
    </param>
    <param>
      <key>lentagname</key>
      <value>len_tag_name_rx</value>
    </param>
    <param>
      <key>mtu</key>
      <value>packet_length</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>puncpat</key>
      <value>'11'</value>
    </param>
    <param>
      <key>value</key>
      <value>fec_extended_decoder</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>0</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(168, 0)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>frame_bits</value>
    </param>
    <param>
      <key>label</key>
      <value>Frame Bits</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>intx</value>
    </param>
    <param>
      <key>value</key>
      <value>1800</value>
    </param>
  </block>
  <block>
    <key>pad_source</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(16, 204)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>fromFEC_RX</value>
    </param>
    <param>
      <key>label</key>
      <value>fromFEC_RX</value>
    </param>
    <param>
      <key>num_streams</key>
      <value>1</value>
    </param>
    <param>
      <key>optional</key>
      <value>False</value>
    </param>
    <param>
      <key>type</key>
      <value>float</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(600, 8)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>len_tag_name_rx</value>
    </param>
    <param>
      <key>label</key>
      <value>Lenght Tag Key</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value>'len_key'</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>access_code</key>
      <value>access_code</value>
    </param>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('My Correlator Block', 'blk', [('access_code', 'None'), ('payload_length', '100'), ('threshold', '0'), ('tag_name', "'len_key2'")], [('0', 'float', 1)], [('0', 'float', 1)], 'arguments to this function show up as parameters in GRC', ['access_code', 'payload_length', 'tag_name', 'threshold'])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import numpy as np
from gnuradio import gr
import pmt


class blk(gr.basic_block):  # other base classes are basic_block, decim_block, interp_block
    def __init__(self, access_code=None, payload_length=100, threshold=0,tag_name="len_key2"):  # only default arguments here
        """arguments to this function show up as parameters in GRC"""
        gr.basic_block.__init__(
            self,
            name='My Correlator Block',   # will show up in GRC
            in_sig=[np.float32],
            out_sig=[np.float32]
        )
        # if an attribute with the same name as a parameter is found,
        # a callback is registered (properties work, too).
        self.access_code = access_code
        self.payload_length = payload_length
        self.threshold = threshold
        self.tag_name = tag_name

        self.mode = 'find'

        self.set_min_output_buffer(2**16)

        self.set_tag_propagation_policy(0)


    def general_work(self, input_items, output_items):
        if self.mode == 'output':
            return self.general_work_output(input_items, output_items)
        elif self.mode == 'find':
            return self.general_work_find(input_items, output_items)

    def general_work_output(self, input_items, output_items):
        L_in = len(input_items[0])
        L_out = len(output_items[0])
        L_payload = self.payload_length * 8  # in bits

        if L_in &lt; L_payload or L_out &lt; L_payload:
            return 0

        self.add_item_tag(0, # Port number
            self.nitems_written(0), # Offset
            pmt.intern(self.tag_name), # Key
            pmt.to_pmt(L_payload) # Value
        )
        output_items[0][:L_payload] = input_items[0][:L_payload]
        self.consume(0, L_payload)

        # ~print('Outputted {} items.'.format(L_payload))

        self.mode = 'find'

        return L_payload

    def general_work_find(self, input_items, output_items):
        L_in = len(input_items[0])

        if L_in &lt; len(self.access_code) :
            return 0

        access_code_binary = np.array([int(b) for b in self.access_code], dtype=np.int)
        input_decoded = np.array(input_items[0] &gt; 0, dtype=np.int)

        corr = np.correlate(2*input_decoded-1, 2*access_code_binary-1)
        matches = np.flatnonzero(corr &gt;= len(self.access_code) - self.threshold)
        if len(matches) == 0:
            self.consume(0, L_in - len(self.access_code))
        else:
            self.consume(0, matches[0] + len(self.access_code))
            self.mode = 'output'

        return 0
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(144, 192)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>my_correlator</value>
    </param>
    <param>
      <key>payload_length</key>
      <value>data_encoded_length</value>
    </param>
    <param>
      <key>tag_name</key>
      <value>len_tag_name_rx</value>
    </param>
    <param>
      <key>threshold</key>
      <value>2</value>
    </param>
  </block>
  <block>
    <key>parameter</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(392, 4)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>packet_length</value>
    </param>
    <param>
      <key>label</key>
      <value>Packet Length</value>
    </param>
    <param>
      <key>short_id</key>
      <value></value>
    </param>
    <param>
      <key>hide</key>
      <value>none</value>
    </param>
    <param>
      <key>type</key>
      <value></value>
    </param>
    <param>
      <key>value</key>
      <value>505</value>
    </param>
  </block>
  <block>
    <key>pad_sink</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(544, 308)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>pad_sink_0</value>
    </param>
    <param>
      <key>type</key>
      <value>byte</value>
    </param>
    <param>
      <key>label</key>
      <value>fromFec</value>
    </param>
    <param>
      <key>num_streams</key>
      <value>1</value>
    </param>
    <param>
      <key>optional</key>
      <value>True</value>
    </param>
    <param>
      <key>vlen</key>
      <value>1</value>
    </param>
  </block>
  <connection>
    <source_block_id>blocks_repack_bits_bb_convolutional</source_block_id>
    <sink_block_id>digital_crc32_bb_convolutional</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_crc32_bb_convolutional</source_block_id>
    <sink_block_id>crc_out</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>fec_extended_tagged_decoder_convolutional</source_block_id>
    <sink_block_id>blocks_repack_bits_bb_convolutional</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>fec_extended_tagged_decoder_convolutional</source_block_id>
    <sink_block_id>pad_sink_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>fromFEC_RX</source_block_id>
    <sink_block_id>my_correlator</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>my_correlator</source_block_id>
    <sink_block_id>fec_extended_tagged_decoder_convolutional</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
</flow_graph>
